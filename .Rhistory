, heightUnits = "meters"
, DBHUnits = "cm")
TSHEcustomDBH[i] <- predictDBH("TSHE"
, hts[i]
, method = "custom"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
}
# plot
plot(hts, PSMEfvsDBH
, col = "red", pch = 1
, ylab = "Predicted DBH--FVS (cm)"
, xlab = "Lidar height (m)"
, main = "Predicted DBH -- FVS")
points(hts, TSHEfvsDBH, col = "red", pch = 16)
legend(65, 80, c("PSME", "TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
plot(hts, PSMEhanusDBH
, col = "red", pch = 1
, ylab = "Predicted DBH--Hanus (cm)"
, xlab = "Lidar height (m)"
, main = "Predicted DBH -- Hanus")
points(hts, TSHEhanusDBH, col = "red", pch = 16)
legend(65, 80, c("PSME", "TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
plot(hts, PSMEcustomDBH
, col = "red", pch = 1
, ylab = "Predicted DBH--custom (cm)"
, xlab = "Lidar height (m)"
, main = "Predicted DBH -- custom")
points(hts, TSHEcustomDBH, col = "red", pch = 16)
legend(65, 80, c("PSME", "TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
library(nls2)
DFadd_nls <- nls(data = DF, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Predicted DBH (cm)", xlab = "Lidar height (m)", main = "Predicted DBH given lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
DF$predDBH <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
points(DF$aveHt, DF$predDBH, col = "orange", pch = 1)
# plot predicted height using field DBH
#points(4.5 + exp(DFnls_coeff[1] + DFnls_coeff[2] * DF$DBH_cm ^ DFnls_coeff[3]), DF$DBH_cm, col = "magenta", pch = 1)
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 4, a1 = -28, a2 = -0.25))
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 4, a1 = -8, a2 = -0.25))
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.25))
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -20, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
library(nls2)
DFadd_nls <- nls(data = DF, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Predicted DBH (cm)", xlab = "Lidar height (m)", main = "Predicted DBH given lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
DF$predDBH <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
points(DF$aveHt, DF$predDBH, col = "orange", pch = 1)
# plot predicted height using field DBH
#points(4.5 + exp(DFnls_coeff[1] + DFnls_coeff[2] * DF$DBH_cm ^ DFnls_coeff[3]), DF$DBH_cm, col = "magenta", pch = 1)
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -20, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
WH$predDBH <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predDBH, col = "orange", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("orange", "orange"))
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -20, a2 = -0.25), algorithm = "port")
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.25), algorithm = "port")
lm(data = WH, DBH_cm ~ aveHt)
m <- lm(data = WH, DBH_cm ~ aveHt)
summary(m)
plot(m)
plot(WH$aveHt, WH$DBH_cm
, col = "red", pch = 1
, ylab = "Predicted DBH (cm)"
, xlab = "Lidar height (m)"
, main = "Comparing field and predicted DBH & lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
plot(WH$aveHt, WH$DBH_cm
, col = "red", pch = 1
, ylab = "Predicted DBH (cm)"
, xlab = "Lidar height (m)"
, main = "Comparing field and predicted DBH & lidar height")
View(WH)
DF
plot(DF$aveHt, DF$DBH_cm
, col = "red", pch = 1
, ylab = "Predicted DBH (cm)"
, xlab = "Lidar height (m)"
, main = "Comparing field and predicted DBH & lidar height")
plot(WH$aveHt, WH$DBH_cm
, col = "red", pch = 1
, ylab = "Predicted DBH (cm)"
, xlab = "Lidar height (m)"
, main = "Comparing field and predicted DBH & lidar height")
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH[-21,], aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH[-21,], aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
library(nls2)
DFadd_nls <- nls(data = DF, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Predicted DBH (cm)", xlab = "Lidar height (m)", main = "Predicted DBH given lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
DF$predDBH <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
points(DF$aveHt, DF$predDBH, col = "orange", pch = 1)
# plot predicted height using field DBH
#points(4.5 + exp(DFnls_coeff[1] + DFnls_coeff[2] * DF$DBH_cm ^ DFnls_coeff[3]), DF$DBH_cm, col = "magenta", pch = 1)
WHadd_nls <- nls(data = WH[-21, ], DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.25), algorithm = "port")
WHadd_nls <- nls(data = WH[-21, ], DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.25))
View(WH)
WHadd_nls <- nls(data = WH[-21, ], DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 10, a1 = -11, a2 = -0.125))
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 10, a1 = -11, a2 = -0.125))
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 10, a1 = -11, a2 = -0.125), algorithm = "pilinear")
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 10, a1 = -11, a2 = -0.125), algorithm = "plinear")
summary(WH$aveHt)
summary(WH$DBH_cm)
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 10, a1 = -11, a2 = -0.125), weights = 1 / WH$DBH_cm)
DFadd_nls <- nls(data = DF, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / DF$DBH_cm)
DFadd_nls <- nls(data = DF, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / DF$aveHt)
DFnls_coeff <- coef(DFadd_nls)
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 10, a1 = -11, a2 = -0.125), weights = 1 / WH$aveHt)
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.125), weights = 1 / WH$aveHt)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Predicted DBH (cm)", xlab = "Lidar height (m)", main = "Predicted DBH given lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Predicted DBH (cm)", xlab = "Lidar height (m)", main = "Predicted DBH given lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
DF$predDBH <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
points(DF$aveHt, DF$predDBH, col = "orange", pch = 1)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Predicted DBH (cm)", xlab = "Lidar height (m)", main = "Predicted DBH given lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
DF$predDBH <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
points(DF$aveHt, DF$predDBH, col = "orange", pch = 1)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
source("../Rcode/predictDBH_Height.R")
inputDataFile <- "../extras/AdjustedField_T3_Training_TreeTops_AllPlots.csv"
# read data
inputData <- read.csv(inputDataFile, stringsAsFactors = FALSE)
# compute the average height using height measured by Ally and Bob in the point cloud
inputData$aveHt <- (inputData$Total.Height.Ally + inputData$Total.Height.Bob) / 2
fvsDBH <- c()
hanusDBH <- c()
for (i in 1:nrow(inputData)) {
fvsDBH[i] <- predictDBH(inputData$Species[i]
, inputData$aveHt[i]
, method = "fvs"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
hanusDBH[i] <- predictDBH(inputData$Species[i]
, inputData$aveHt[i]
, method = "hanus"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
}
inputData$fvsDBH <- fvsDBH
inputData$hanusDBH <- hanusDBH
DF <- inputData[inputData$Species == "PSME", ]
WH <- inputData[inputData$Species == "TSHE", ]
plot(DF$aveHt, DF$DBH_cm
, col = "red"
, pch = 1
, ylab = "Predicted DBH (cm)"
, xlab = "Lidar height (m)"
, main = "Comparing field and predicted DBH & lidar height")
points(WH$aveHt, WH$DBH_cm
, col = "red", pch = 16)
legend(36, 25, c("Field PSME", "Field TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
plot(WH$aveHt, WH$DBH_cm
, col = "red", pch = 1
, ylab = "Predicted DBH (cm)"
, xlab = "Lidar height (m)"
, main = "Comparing field and predicted DBH & lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(36, 25, c("Field PSME", "Field TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
points(DF$aveHt, DF$fvsDBH
, col = "green", pch = 1)
points(WH$aveHt, WH$fvsDBH
, col = "green", pch = 16)
points(DF$aveHt, DF$hanusDBH
, col = "blue", pch = 1)
points(WH$aveHt, WH$hanusDBH
, col = "blue", pch = 16)
legend(20, 70, c("Hanus PSME", "Hanus TSHE", "FVS PSME", "FVS TSHE")
, pch = c(1, 16, 1, 16)
, col = c("blue", "blue", "green", "green"))
{ # force all lines to execute as one...prevents splitting the code before and after the graphs
par(mfrow=c(2,2))
hist(DF$fvsDBH - DF$DBH_cm
, main = paste0("FVS DBH error -- DF (bias = ", round(mean(DF$fvsDBH - DF$DBH_cm), 2), " cm)")
, xlab = "DBH error (cm)")
hist(DF$hanusDBH - DF$DBH_cm
, main = paste0("Hanus DBH error -- DF (bias = ", round(mean(DF$hanusDBH - DF$DBH_cm), 2), " cm)")
, xlab = "DBH error (cm)")
hist(WH$fvsDBH - WH$DBH_cm
, main = paste0("FVS DBH error -- WH (bias = ", round(mean(WH$fvsDBH - WH$DBH_cm), 2), " cm)")
, xlab = "DBH error (cm)")
hist(WH$hanusDBH - WH$DBH_cm
, main = paste0("Hanus DBH error -- WH (bias = ", round(mean(WH$hanusDBH - WH$DBH_cm), 2), " cm)")
, xlab = "DBH error (cm)")
par(mfrow = c(1, 1))
}
# generate a range of heights
hts <- seq(5, 75, by = 2)
# predict DBH
PSMEfvsDBH <- c()
PSMEhanusDBH <- c()
PSMEcustomDBH <- c()
TSHEfvsDBH <- c()
TSHEhanusDBH <- c()
TSHEcustomDBH <- c()
for (i in 1:length(hts)) {
PSMEfvsDBH[i] <- predictDBH("PSME"
, hts[i]
, method = "fvs"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
TSHEfvsDBH[i] <- predictDBH("TSHE"
, hts[i]
, method = "fvs"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
PSMEhanusDBH[i] <- predictDBH("PSME"
, hts[i]
, method = "hanus"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
TSHEhanusDBH[i] <- predictDBH("TSHE"
, hts[i]
, method = "hanus"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
PSMEcustomDBH[i] <- predictDBH("PSME"
, hts[i]
, method = "custom"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
TSHEcustomDBH[i] <- predictDBH("TSHE"
, hts[i]
, method = "custom"
, location = 1
, heightUnits = "meters"
, DBHUnits = "cm")
}
# plot
plot(hts, PSMEfvsDBH
, col = "red", pch = 1
, ylab = "Predicted DBH--FVS (cm)"
, xlab = "Lidar height (m)"
, main = "Predicted DBH -- FVS")
points(hts, TSHEfvsDBH, col = "red", pch = 16)
legend(65, 80, c("PSME", "TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
plot(hts, PSMEhanusDBH
, col = "red", pch = 1
, ylab = "Predicted DBH--Hanus (cm)"
, xlab = "Lidar height (m)"
, main = "Predicted DBH -- Hanus")
points(hts, TSHEhanusDBH, col = "red", pch = 16)
legend(65, 80, c("PSME", "TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
plot(hts, PSMEcustomDBH
, col = "red", pch = 1
, ylab = "Predicted DBH--custom (cm)"
, xlab = "Lidar height (m)"
, main = "Predicted DBH -- custom")
points(hts, TSHEcustomDBH, col = "red", pch = 16)
legend(65, 80, c("PSME", "TSHE")
, pch = c(1, 16)
, col = c("red", "red"))
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
library(nls2)
DFadd_nls <- nls(data = DF, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / DF$aveHt)
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Predicted DBH (cm)", xlab = "Lidar height (m)", main = "Predicted DBH given lidar height")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
DF$predDBH <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
points(DF$aveHt, DF$predDBH, col = "orange", pch = 1)
# plot predicted height using field DBH
#points(4.5 + exp(DFnls_coeff[1] + DFnls_coeff[2] * DF$DBH_cm ^ DFnls_coeff[3]), DF$DBH_cm, col = "magenta", pch = 1)
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.125), weights = 1 / WH$aveHt)
summary(WH$aveHt)
exp(7)
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.125), weights = 1 / WH$aveHt, trace = TRUE)
t <- data.frame(WH$DBH_cm, WH$aveHt)
View(t)
DFadd_nls <- nls(data = DF, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / DF$aveHt, trace = TRUE)
log(1)
exp(7)
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25))
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25),, weights = 1 / DF$DBH_cm)
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / WH$DBH_cm)
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / DF$DBH_cm)
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / WH$DBH_cm)
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
View(inputData)
WH[nrow(WH) + 1, ] <- WH[nrow(WH), ]
WH$aveHt[nrow(WH)] <- 45
WH$DBH_cm[nrow(WH)] <- 65
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -0.125), weights = 1 / WH$aveHt, trace = TRUE)
View(WH)
DFadd_nls <- nls(data = DF, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / DF$DBH_cm)
DFnls_coeff <- coef(DFadd_nls)
plot(DF$aveHt, DF$DBH_cm, col = "red", pch = 1, ylab = "Field DBH (cm)", xlab = "Predicted height (m)", main = "Predicted height given field DBH")
points(WH$aveHt, WH$DBH_cm, col = "red", pch = 16)
legend(38, 27, c("Field PSME", "Field TSHE"), pch = c(1, 16), col = c("red", "red"))
# predict heights
DF$predHt <- (log((DF$aveHt - 1.37) / exp(DFnls_coeff["a0"])) / DFnls_coeff["a1"])^(1 / DFnls_coeff["a2"])
# plot predicted DBH using lidar height
points(DF$aveHt, DF$predHt, col = "black", pch = 1)
# fit new model for WH using Hanus equation form
# DBH in cm and height in m
WHadd_nls <- nls(data = WH, aveHt ~ 1.37 + exp(a0 + a1 * (DBH_cm ^ a2)),
start = list(a0 = 7.0, a1 = -6.0, a2 = -0.25), weights = 1 / WH$DBH_cm)
WHnls_coeff <- coef(WHadd_nls)
# predict heights
WH$predHt <- (log((WH$aveHt - 1.37) / exp(WHnls_coeff["a0"])) / WHnls_coeff["a1"])^(1 / WHnls_coeff["a2"])
points(WH$aveHt, WH$predHt, col = "black", pch = 16)
# plot predicted height using field DBH
#points(4.5 + exp(WHnls_coeff[1] + WHnls_coeff[2] * WH$DBH_cm ^ WHnls_coeff[3]), WH$DBH_cm, col = "magenta", pch = 16)
legend(38, 36, c("Custom PSME", "Custom TSHE"), pch = c(1, 16), col = c("black", "black"))
WHadd_nls <- nls(data = WH, DBH_cm ~ (log((aveHt - 1.37) / exp(a0)) / a1) ^ (1 / a2),
start = list(a0 = 7, a1 = -6, a2 = -1), weights = 1 / WH$aveHt, trace = TRUE)
