# read the ranger model
speciesRF <- readRDS("FINAL_RF_HW_DF_Model_LeaningTrees.rds")
i <- 7
outputFolder <- paste0(dirs[i], "/Processing")
predictionFile <- paste0(outputFolder, "/SmallCylinder_Predictions.csv")
# read metrics
df <- read.csv(predictionFile, stringsAsFactors = FALSE)
if (drawMaps) {
# read polygons for TAOs
polys <- st_read(paste0(outputFolder, "/Trees/trees_Polygons.shp"))
polys <- merge(polys, df, by.x = "BasinID", by.y = "Identifier")
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = PredictedSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 9), legend.text = element_text(size = 8)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 6, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
}
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = PredictedSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 9), legend.text = element_text(size = 8)) +
guides(fill=guide_legend(title="Predicted Species")) +
scale_fill_discrete(h = c(0, 360) + 15, l = 65, name = "Species", labels = c("Douglas-fir", "Western hemlock")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
p1
polys$longSpecies <- ""
# read polygons for TAOs
polys <- st_read(paste0(outputFolder, "/Trees/trees_Polygons.shp"))
polys <- merge(polys, df, by.x = "BasinID", by.y = "Identifier")
polys$longSpecies <- ""
polys$longSpecies[polys$longSpecies == "PSME", ] <- "Douglas-fir"
polys$longSpecies[polys$longSpecies == "PSME"] <- "Douglas-fir"
polys$longSpecies[polys$longSpecies == "TSHE"] <- "Western hemlock"
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 9), legend.text = element_text(size = 8)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
p1
polys$longSpecies <- as.factor(polys$longSpecies)
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 9), legend.text = element_text(size = 8)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
p1
View(polys)
# read polygons for TAOs
polys <- st_read(paste0(outputFolder, "/Trees/trees_Polygons.shp"))
polys <- merge(polys, df, by.x = "BasinID", by.y = "Identifier")
polys$longSpecies <- ""
polys$longSpecies[polys$PredictedSpecies == "PSME"] <- "Douglas-fir"
polys$longSpecies[polys$PredictedSpecies == "TSHE"] <- "Western hemlock"
polys$longSpecies <- as.factor(polys$longSpecies)
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 9), legend.text = element_text(size = 8)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
p1
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 6, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 9), legend.text = element_text(size = 8)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm"),
text = element_text(size=13)) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
p1
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 9), legend.text = element_text(size = 13)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
p1
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.15)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 13), legend.text = element_text(size = 13)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(4.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
p1
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 6, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 4, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.05)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 13), legend.text = element_text(size = 13)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(0.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 4, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.1)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 12), legend.text = element_text(size = 11)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(0.5, "cm"), pad_y = unit(0.15, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 4, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.7, 0.1)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 12), legend.text = element_text(size = 11)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(0.5, "cm"), pad_y = unit(0.1, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 4, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.75, 0.1)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 12), legend.text = element_text(size = 11)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(0.5, "cm"), pad_y = unit(0.1, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 4, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
p1 <- ggplot() +
geom_sf(data = polys, mapping = aes(fill = longSpecies), color = "black", alpha=1.0) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5)) +
theme_bw() +
theme(legend.position = c(0.725, 0.1)) +
theme(legend.key.size = unit(3, "mm"), legend.title = element_text(size = 12), legend.text = element_text(size = 11)) +
guides(fill=guide_legend(title="Predicted Species")) +
xlab("Longitude") +
ylab("Latitude")+
coord_sf() +
theme(plot.background = element_blank(),
#panel.border = element_blank(),
plot.margin = unit(c(0, 0, 0 ,0), "mm")) +
ggspatial::annotation_north_arrow(location="bl", height = unit(.75, "cm"),
style = ggspatial::north_arrow_orienteering(text_size = 8),
width = unit(.5, "cm"), pad_y = unit(2.5, "cm"), pad_x = unit(6.5, "cm")) +
#width = unit(.5, "cm"), pad_y = unit(8.0, "cm"), pad_x = unit(0.5, "cm")) +
ggspatial::annotation_scale(location="bl",
pad_x = unit(0.5, "cm"), pad_y = unit(0.1, "cm"), text_cex = 0.8, height = unit(0.2, "cm"))
# save the map
tiff(paste0(outputFolder, "/speciesMap.tif"),
compression = "lzw", width = 4, height = 4.0, units = "in", res = 600)
print(p1)
dev.off()
library(ggplot2)
library(dplyr)
originalPlotTrees <- read.csv(file = "G:/R_Stuff/DroneLidarCode/extras/AdjustedTrees_AllPlots.csv", stringsAsFactors = FALSE)
# need to reshape the data so rows are associated with a person
p1 <- originalPlotTrees[, c(1:18, 42, 59, 60, 48)]
p2 <- originalPlotTrees[, c(1, 19:35, 42, 59, 60, 48)]
colnames(p1) <- c(
"TreeID",
"X",
"Y",
"Elevation",
"Height",
"HCB",
"MaxCrownDiameter",
"MinCrownDiameter",
"CrownRotation",
"R",
"G",
"B",
"DBH",
"LeanAngle",
"LeanAzimuth",
"StatusCode",
"TopX",
"TopY",
"PlotID",
"OrigX",
"OrigY",
"Species"
)
colnames(p2) <- colnames(p1)
p1$Person <- 1
p2$Person <- 2
comp <- p1[, c(1, 19, 22, 23)]
comp$diff <- sqrt((p1$X - p2$X) * (p1$X - p2$X) +(p1$Y - p2$Y) * (p1$Y - p2$Y))
comp$diffTop <- sqrt((p1$TopX - p2$TopX) * (p1$TopX - p2$TopX) +(p1$TopY - p2$TopY) * (p1$TopY - p2$TopY))
comp$PlotID <- as.factor(comp$PlotID)
p <- rbind(p1, p2)
cat("Trees for adjustment:\n")
table(comp$Species)
p$Person <- as.factor(p$Person)
p$PlotID <- as.factor(p$PlotID)
p$Species <- as.factor(p$Species)
p$BaseDiffX <- p$X - p$OrigX
p$BaseDiffY <- p$Y - p$OrigY
p$BaseDiff <- sqrt(p$BaseDiffX * p$BaseDiffX + p$BaseDiffY * p$BaseDiffY)
p$TopDiffX <- p$X - p$TopX
p$TopDiffY <- p$Y - p$TopY
p$TopDiff <- sqrt(p$TopDiffX * p$TopDiffX + p$TopDiffY * p$TopDiffY)
is.outlier <- function (x) {
x < quantile(x, .25) - 1.5 * IQR(x) |
x > quantile(x, .75) + 1.5 * IQR(x)
}
adjustX <- function (x, y) {
t <- x
for (i in 1:length(x)) {
if (y[i] == 1)
t[i] <- x[i] - 0.2
else
t[i] <- x[i] + 0.2
}
return(t)
}
newp <- p
newp %>% group_by(PlotID, Person) %>%
mutate(outlier.p = is.outlier(BaseDiff)) %>%
mutate(PlotID1 = adjustX(as.integer(PlotID), as.integer(Person))) %>%
ungroup() -> newp
names(newp)[names(newp) == 'Person'] <- 'Analyst'
# new plot with colored boxes and outliers and black outlines, "Person" changed to "Analyst"
bp <- ggplot(newp, aes(x=PlotID, y=BaseDiff, fill = Analyst)) +
geom_boxplot(position=position_dodge2(width = 1, padding = 0.2), outlier.color = NA) +
geom_point(data = newp[newp$outlier.p,], aes(x=PlotID1, y=BaseDiff, col = Analyst)) +
xlab("Plot identifier") +
ylab("Distance between field and \nadjusted base locations (m)") +
coord_cartesian(ylim=c(0,8)) +
theme(
legend.position = c(0.9, 0.85),
text = element_text(size=14)
)
#bp
bp
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_A.tif",
compression = "lzw", width = 6.5, height = 5, units = "in", res = 600)
print(bp)
dev.off()
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_A.tif",
compression = "lzw", width = 7, height = 5, units = "in", res = 600)
print(bp)
dev.off()
# new plot with colored boxes and outliers and black outlines, "Person" changed to "Analyst"
bp <- ggplot(newp, aes(x=PlotID, y=BaseDiff, fill = Analyst)) +
geom_boxplot(position=position_dodge2(width = 1, padding = 0.3), outlier.color = NA) +
geom_point(data = newp[newp$outlier.p,], aes(x=PlotID1, y=BaseDiff, col = Analyst)) +
xlab("Plot identifier") +
ylab("Distance between field and \nadjusted base locations (m)") +
coord_cartesian(ylim=c(0,8)) +
theme(
legend.position = c(0.9, 0.85),
text = element_text(size=14)
)
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_A.tif",
compression = "lzw", width = 7, height = 5, units = "in", res = 600)
print(bp)
dev.off()
bp <- ggplot(comp, aes(x=PlotID, y=diff, group = PlotID)) +
geom_boxplot(show.legend = FALSE) +
xlab("Plot identifier") +
ylab("Distance between base locations \nfor analysts 1 and 2 (m)") +
coord_cartesian(ylim=c(0,5)) +
theme(
text = element_text(size=14)
)
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_B.tif",
compression = "lzw", width = 7, height = 3.5, units = "in", res = 600)
print(bp)
dev.off()
# look at difference in locations for tree tops. I expected this to have smaller overall differences
# but not really the case. Overall differences for plot are smaller but still under a meter for most trees.
# Larger differences are due to mismatched trees.
bp <- ggplot(comp, aes(x=PlotID, y=diffTop, group = PlotID)) +
geom_boxplot(show.legend = FALSE) +
xlab("Plot identifier") +
ylab("Distance between top locations \nfor analysts 1 and 2 (m)") +
coord_cartesian(ylim=c(0,5)) +
theme(
text = element_text(size=14)
)
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_C.tif",
compression = "lzw", width = 7, height = 3.5, units = "in", res = 600)
print(bp)
dev.off()
bp <- ggplot(comp, aes(x=PlotID, y=diff, group = PlotID)) +
geom_boxplot(show.legend = FALSE) +
xlab("Plot identifier") +
ylab("Distance between base locations \nfor analysts 1 and 2 (m)") +
coord_cartesian(ylim=c(0,5)) +
theme(
text = element_text(size=13)
)
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_B.tif",
compression = "lzw", width = 7, height = 3.5, units = "in", res = 600)
print(bp)
dev.off()
# look at difference in locations for tree tops. I expected this to have smaller overall differences
# but not really the case. Overall differences for plot are smaller but still under a meter for most trees.
# Larger differences are due to mismatched trees.
bp <- ggplot(comp, aes(x=PlotID, y=diffTop, group = PlotID)) +
geom_boxplot(show.legend = FALSE) +
xlab("Plot identifier") +
ylab("Distance between top locations \nfor analysts 1 and 2 (m)") +
coord_cartesian(ylim=c(0,5)) +
theme(
text = element_text(size=13)
)
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_C.tif",
compression = "lzw", width = 7, height = 3.5, units = "in", res = 600)
print(bp)
dev.off()
# new plot with colored boxes and outliers and black outlines, "Person" changed to "Analyst"
bp <- ggplot(newp, aes(x=PlotID, y=BaseDiff, fill = Analyst)) +
geom_boxplot(position=position_dodge2(width = 1, padding = 0.3), outlier.color = NA) +
geom_point(data = newp[newp$outlier.p,], aes(x=PlotID1, y=BaseDiff, col = Analyst)) +
xlab("Plot identifier") +
ylab("Distance between field and \nadjusted base locations (m)") +
coord_cartesian(ylim=c(0,8)) +
theme(
legend.position = c(0.9, 0.85),
text = element_text(size=13)
)
#bp
tiff("G:/Bob's Stuff/Documents/FY23/Papers/DF_WH_Classification/RcodeFigures/Comparison_A.tif",
compression = "lzw", width = 7, height = 5, units = "in", res = 600)
print(bp)
dev.off()
